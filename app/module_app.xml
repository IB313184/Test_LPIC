<?xml version="1.0" encoding="UTF-8"?>
<project name="module_app" default="compile.module.app">
  <dirname property="module.app.basedir" file="${ant.file.module_app}"/>
  
  <property name="module.jdk.home.app" value="${jdk.home.android_api_4_platform}"/>
  <property name="module.jdk.bin.app" value="${jdk.bin.android_api_4_platform}"/>
  <property name="module.jdk.classpath.app" value="jdk.classpath.android_api_4_platform"/>
  
  <property name="compiler.args.app" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="app.output.dir" value="${module.app.basedir}/build/classes/release"/>
  <property name="app.testoutput.dir" value="${module.app.basedir}/build/classes/release"/>
  
  <path id="app.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="app.module.production.classpath">
    <path refid="${module.jdk.classpath.app}"/>
    <path refid="library.support-v4-19.0.1.classpath"/>
  </path>
  
  <path id="app.runtime.production.module.classpath">
    <pathelement location="${app.output.dir}"/>
    <path refid="library.support-v4-19.0.1.classpath"/>
  </path>
  
  <path id="app.module.classpath">
    <path refid="${module.jdk.classpath.app}"/>
    <pathelement location="${app.output.dir}"/>
    <path refid="library.support-v4-19.0.1.classpath"/>
  </path>
  
  <path id="app.runtime.module.classpath">
    <pathelement location="${app.output.dir}"/>
    <path refid="library.support-v4-19.0.1.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.app">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.app">
    <patternset refid="excluded.from.module.app"/>
  </patternset>
  
  <path id="app.module.sourcepath">
    <dirset dir="${module.app.basedir}">
      <include name="build/source/r/release"/>
      <include name="build/source/aidl/release"/>
      <include name="build/source/buildConfig/release"/>
      <include name="build/source/rs/release"/>
      <include name="src/main/assets"/>
      <include name="src/main/java"/>
      <include name="src/main/res"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.app" depends="compile.module.app.production,compile.module.app.tests" description="Compile module app"/>
  
  <target name="compile.module.app.production" depends="register.custom.compilers" description="Compile module app; production classes">
    <mkdir dir="${app.output.dir}"/>
    <javac2 destdir="${app.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.app}/javac">
      <compilerarg line="${compiler.args.app}"/>
      <bootclasspath refid="app.module.bootclasspath"/>
      <classpath refid="app.module.production.classpath"/>
      <src refid="app.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.app"/>
    </javac2>
    
    <copy todir="${app.output.dir}">
      <fileset dir="${module.app.basedir}/build/source/r/release">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.app.basedir}/build/source/aidl/release">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.app.basedir}/build/source/buildConfig/release">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.app.basedir}/build/source/rs/release">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.app.basedir}/src/main/assets">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.app.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.app.basedir}/src/main/res">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.app.tests" depends="register.custom.compilers,compile.module.app.production" description="compile module app; test classes" unless="skip.tests"/>
  
  <target name="clean.module.app" description="cleanup module">
    <delete dir="${app.output.dir}"/>
    <delete dir="${app.testoutput.dir}"/>
  </target>
</project>